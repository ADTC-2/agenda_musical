-- Tabela de Usuários
CREATE TABLE `usuarios` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `nome` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `senha` varchar(255) NOT NULL,
  `tipo` enum('admin','musico','regente') NOT NULL DEFAULT 'regente',
  `criado_em` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `email_unique` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;



-- Tabela de Escalas
CREATE TABLE IF NOT EXISTS escalas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    evento_id INT NOT NULL,
    usuario_id INT NOT NULL,
    observacoes VARCHAR(250),
    FOREIGN KEY (evento_id) REFERENCES eventos(id) ON DELETE CASCADE,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE
);

-- Tabela de Eventos
CREATE TABLE IF NOT EXISTS eventos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_hora DATETIME NOT NULL
);

-- Tabela de Repertórios
CREATE TABLE IF NOT EXISTS repertorios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    evento_id INT NOT NULL,
    FOREIGN KEY (evento_id) REFERENCES eventos(id) ON DELETE CASCADE
);


-- Tabela de Relacionamento entre Repertórios e Músicas
CREATE TABLE IF NOT EXISTS repertorio_musica (
    repertorio_id INT NOT NULL,
    musica_id INT NOT NULL,
    categoria ENUM('criança', 'adolescente', 'jovem', 'senhoras') NOT NULL,
    PRIMARY KEY (repertorio_id, musica_id),
    FOREIGN KEY (repertorio_id) REFERENCES repertorios(id) ON DELETE CASCADE,
    FOREIGN KEY (musica_id) REFERENCES musicas(id) ON DELETE CASCADE
);
-- Tabela de Músicas
CREATE TABLE IF NOT EXISTS musicas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL,
    cantor_banda VARCHAR(100),
    tipo ENUM('Louvor', 'Harpa Cristã') NOT NULL,
    tom VARCHAR(10),
    bpm INT,
    link VARCHAR(255),
    arquivo VARCHAR(255),
    criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);





-- Tabela de Avisos
CREATE TABLE IF NOT EXISTS avisos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL,
    mensagem TEXT NOT NULL,
    tipo ENUM('geral', 'musico', 'admin') DEFAULT 'geral',
    criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    usuario_id INT,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE SET NULL
);




/agenda_musical/
│── /assets/               # Arquivos estáticos (CSS, JS, imagens)
│   ├── /css/              # Arquivos CSS (Bootstrap e estilos personalizados)
│   ├── /js/               # Scripts JavaScript
│   │   ├── ajax.js        # Funções gerais para chamadas AJAX
│   │   ├── usuario.js     # Scripts específicos para usuários
│   │   ├── culto.js       # Scripts específicos para cultos
│   │   ├── musica.js      # Scripts específicos para músicas
│   │   ├── repertorio.js  # Scripts específicos para repertórios
│   │   ├── escala.js      # Scripts específicos para escalas
│   ├── /img/              # Imagens do projeto
│
│── /config/               # Arquivos de configuração do banco de dados e constantes
│   ├── database.php       # Configuração da conexão com o banco de dados
│   ├── config.php         # Configurações gerais do sistema
│
│── /controllers/          # Controladores que lidam com as requisições
│   ├── UsuarioController.php
│   ├── CultoController.php
│   ├── MusicaController.php
│   ├── RepertorioController.php
│   ├── EscalaController.php
│   ├── AuthController.php
│
│── /models/               # Modelos que interagem com o banco de dados
│   ├── Usuario.php
│   ├── Culto.php
│   ├── Musica.php
│   ├── Repertorio.php
│   ├── Escala.php
│
│── /views/                # Páginas visuais do sistema
│   ├── /partials/         # Cabeçalhos, rodapés e componentes reutilizáveis
│   ├── home.php
│   ├── login.php
│   ├── dashboard.php
│
│── /ajax/                 # Arquivos PHP para processar requisições AJAX
│   ├── usuario_ajax.php
│   ├── culto_ajax.php
│   ├── musica_ajax.php
│   ├── repertorio_ajax.php
│   ├── escala_ajax.php
│
│── /routes/               # Arquivo de rotas do sistema
│   ├── web.php
│
│── /public/               # Pasta pública (ponto de entrada do sistema)
│   ├── index.php          # Página inicial que carrega tudo
│
│── .env                   # Configurações sensíveis (banco de dados, API keys, etc.)
│── .htaccess              # Arquivo de reescrita para URLs amigáveis
│── README.md              # Documentação do projeto



<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Agenda Musical</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> 
    <link rel="stylesheet" href="../../../public/assets/css/auth/login.css">   
</head>
<body>
    <div class="login-container">
        <img src="../../assets/images/LOGO LOUVOR AGENDA.png" alt="Logo" class="logo">        
        <div class="mb-3">
            <input type="text" class="form-control" placeholder="Usuário" required>
        </div>
        <div class="mb-3">
            <input type="password" class="form-control" placeholder="Senha" required>
        </div>
        <button type="submit" class="btn btn-laranja">Entrar</button>
        <a href="#">Esqueci a senha</a>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>


